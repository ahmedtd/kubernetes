//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/certificates/v1alpha1"
	v1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	certificates "k8s.io/kubernetes/pkg/apis/certificates"
	core "k8s.io/kubernetes/pkg/apis/core"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClusterTrustBundle)(nil), (*certificates.ClusterTrustBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterTrustBundle_To_certificates_ClusterTrustBundle(a.(*v1alpha1.ClusterTrustBundle), b.(*certificates.ClusterTrustBundle), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.ClusterTrustBundle)(nil), (*v1alpha1.ClusterTrustBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_ClusterTrustBundle_To_v1alpha1_ClusterTrustBundle(a.(*certificates.ClusterTrustBundle), b.(*v1alpha1.ClusterTrustBundle), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClusterTrustBundleList)(nil), (*certificates.ClusterTrustBundleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterTrustBundleList_To_certificates_ClusterTrustBundleList(a.(*v1alpha1.ClusterTrustBundleList), b.(*certificates.ClusterTrustBundleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.ClusterTrustBundleList)(nil), (*v1alpha1.ClusterTrustBundleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_ClusterTrustBundleList_To_v1alpha1_ClusterTrustBundleList(a.(*certificates.ClusterTrustBundleList), b.(*v1alpha1.ClusterTrustBundleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClusterTrustBundleSpec)(nil), (*certificates.ClusterTrustBundleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec(a.(*v1alpha1.ClusterTrustBundleSpec), b.(*certificates.ClusterTrustBundleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.ClusterTrustBundleSpec)(nil), (*v1alpha1.ClusterTrustBundleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec(a.(*certificates.ClusterTrustBundleSpec), b.(*v1alpha1.ClusterTrustBundleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WorkloadCertificate)(nil), (*certificates.WorkloadCertificate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WorkloadCertificate_To_certificates_WorkloadCertificate(a.(*v1alpha1.WorkloadCertificate), b.(*certificates.WorkloadCertificate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.WorkloadCertificate)(nil), (*v1alpha1.WorkloadCertificate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_WorkloadCertificate_To_v1alpha1_WorkloadCertificate(a.(*certificates.WorkloadCertificate), b.(*v1alpha1.WorkloadCertificate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WorkloadCertificateCondition)(nil), (*certificates.WorkloadCertificateCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WorkloadCertificateCondition_To_certificates_WorkloadCertificateCondition(a.(*v1alpha1.WorkloadCertificateCondition), b.(*certificates.WorkloadCertificateCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.WorkloadCertificateCondition)(nil), (*v1alpha1.WorkloadCertificateCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_WorkloadCertificateCondition_To_v1alpha1_WorkloadCertificateCondition(a.(*certificates.WorkloadCertificateCondition), b.(*v1alpha1.WorkloadCertificateCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WorkloadCertificateList)(nil), (*certificates.WorkloadCertificateList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WorkloadCertificateList_To_certificates_WorkloadCertificateList(a.(*v1alpha1.WorkloadCertificateList), b.(*certificates.WorkloadCertificateList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.WorkloadCertificateList)(nil), (*v1alpha1.WorkloadCertificateList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_WorkloadCertificateList_To_v1alpha1_WorkloadCertificateList(a.(*certificates.WorkloadCertificateList), b.(*v1alpha1.WorkloadCertificateList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WorkloadCertificateSpec)(nil), (*certificates.WorkloadCertificateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec(a.(*v1alpha1.WorkloadCertificateSpec), b.(*certificates.WorkloadCertificateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.WorkloadCertificateSpec)(nil), (*v1alpha1.WorkloadCertificateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec(a.(*certificates.WorkloadCertificateSpec), b.(*v1alpha1.WorkloadCertificateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WorkloadCertificateStatus)(nil), (*certificates.WorkloadCertificateStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus(a.(*v1alpha1.WorkloadCertificateStatus), b.(*certificates.WorkloadCertificateStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*certificates.WorkloadCertificateStatus)(nil), (*v1alpha1.WorkloadCertificateStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus(a.(*certificates.WorkloadCertificateStatus), b.(*v1alpha1.WorkloadCertificateStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_ClusterTrustBundle_To_certificates_ClusterTrustBundle(in *v1alpha1.ClusterTrustBundle, out *certificates.ClusterTrustBundle, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ClusterTrustBundle_To_certificates_ClusterTrustBundle is an autogenerated conversion function.
func Convert_v1alpha1_ClusterTrustBundle_To_certificates_ClusterTrustBundle(in *v1alpha1.ClusterTrustBundle, out *certificates.ClusterTrustBundle, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterTrustBundle_To_certificates_ClusterTrustBundle(in, out, s)
}

func autoConvert_certificates_ClusterTrustBundle_To_v1alpha1_ClusterTrustBundle(in *certificates.ClusterTrustBundle, out *v1alpha1.ClusterTrustBundle, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_certificates_ClusterTrustBundle_To_v1alpha1_ClusterTrustBundle is an autogenerated conversion function.
func Convert_certificates_ClusterTrustBundle_To_v1alpha1_ClusterTrustBundle(in *certificates.ClusterTrustBundle, out *v1alpha1.ClusterTrustBundle, s conversion.Scope) error {
	return autoConvert_certificates_ClusterTrustBundle_To_v1alpha1_ClusterTrustBundle(in, out, s)
}

func autoConvert_v1alpha1_ClusterTrustBundleList_To_certificates_ClusterTrustBundleList(in *v1alpha1.ClusterTrustBundleList, out *certificates.ClusterTrustBundleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]certificates.ClusterTrustBundle)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ClusterTrustBundleList_To_certificates_ClusterTrustBundleList is an autogenerated conversion function.
func Convert_v1alpha1_ClusterTrustBundleList_To_certificates_ClusterTrustBundleList(in *v1alpha1.ClusterTrustBundleList, out *certificates.ClusterTrustBundleList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterTrustBundleList_To_certificates_ClusterTrustBundleList(in, out, s)
}

func autoConvert_certificates_ClusterTrustBundleList_To_v1alpha1_ClusterTrustBundleList(in *certificates.ClusterTrustBundleList, out *v1alpha1.ClusterTrustBundleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.ClusterTrustBundle)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_certificates_ClusterTrustBundleList_To_v1alpha1_ClusterTrustBundleList is an autogenerated conversion function.
func Convert_certificates_ClusterTrustBundleList_To_v1alpha1_ClusterTrustBundleList(in *certificates.ClusterTrustBundleList, out *v1alpha1.ClusterTrustBundleList, s conversion.Scope) error {
	return autoConvert_certificates_ClusterTrustBundleList_To_v1alpha1_ClusterTrustBundleList(in, out, s)
}

func autoConvert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec(in *v1alpha1.ClusterTrustBundleSpec, out *certificates.ClusterTrustBundleSpec, s conversion.Scope) error {
	out.SignerName = in.SignerName
	out.TrustBundle = in.TrustBundle
	return nil
}

// Convert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec is an autogenerated conversion function.
func Convert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec(in *v1alpha1.ClusterTrustBundleSpec, out *certificates.ClusterTrustBundleSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterTrustBundleSpec_To_certificates_ClusterTrustBundleSpec(in, out, s)
}

func autoConvert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec(in *certificates.ClusterTrustBundleSpec, out *v1alpha1.ClusterTrustBundleSpec, s conversion.Scope) error {
	out.SignerName = in.SignerName
	out.TrustBundle = in.TrustBundle
	return nil
}

// Convert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec is an autogenerated conversion function.
func Convert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec(in *certificates.ClusterTrustBundleSpec, out *v1alpha1.ClusterTrustBundleSpec, s conversion.Scope) error {
	return autoConvert_certificates_ClusterTrustBundleSpec_To_v1alpha1_ClusterTrustBundleSpec(in, out, s)
}

func autoConvert_v1alpha1_WorkloadCertificate_To_certificates_WorkloadCertificate(in *v1alpha1.WorkloadCertificate, out *certificates.WorkloadCertificate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_WorkloadCertificate_To_certificates_WorkloadCertificate is an autogenerated conversion function.
func Convert_v1alpha1_WorkloadCertificate_To_certificates_WorkloadCertificate(in *v1alpha1.WorkloadCertificate, out *certificates.WorkloadCertificate, s conversion.Scope) error {
	return autoConvert_v1alpha1_WorkloadCertificate_To_certificates_WorkloadCertificate(in, out, s)
}

func autoConvert_certificates_WorkloadCertificate_To_v1alpha1_WorkloadCertificate(in *certificates.WorkloadCertificate, out *v1alpha1.WorkloadCertificate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_certificates_WorkloadCertificate_To_v1alpha1_WorkloadCertificate is an autogenerated conversion function.
func Convert_certificates_WorkloadCertificate_To_v1alpha1_WorkloadCertificate(in *certificates.WorkloadCertificate, out *v1alpha1.WorkloadCertificate, s conversion.Scope) error {
	return autoConvert_certificates_WorkloadCertificate_To_v1alpha1_WorkloadCertificate(in, out, s)
}

func autoConvert_v1alpha1_WorkloadCertificateCondition_To_certificates_WorkloadCertificateCondition(in *v1alpha1.WorkloadCertificateCondition, out *certificates.WorkloadCertificateCondition, s conversion.Scope) error {
	out.Type = certificates.WorkloadCertificateConditionType(in.Type)
	out.Status = core.ConditionStatus(in.Status)
	out.Reason = in.Reason
	out.Message = in.Message
	out.ObservedGeneration = in.ObservedGeneration
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	return nil
}

// Convert_v1alpha1_WorkloadCertificateCondition_To_certificates_WorkloadCertificateCondition is an autogenerated conversion function.
func Convert_v1alpha1_WorkloadCertificateCondition_To_certificates_WorkloadCertificateCondition(in *v1alpha1.WorkloadCertificateCondition, out *certificates.WorkloadCertificateCondition, s conversion.Scope) error {
	return autoConvert_v1alpha1_WorkloadCertificateCondition_To_certificates_WorkloadCertificateCondition(in, out, s)
}

func autoConvert_certificates_WorkloadCertificateCondition_To_v1alpha1_WorkloadCertificateCondition(in *certificates.WorkloadCertificateCondition, out *v1alpha1.WorkloadCertificateCondition, s conversion.Scope) error {
	out.Type = v1alpha1.WorkloadCertificateConditionType(in.Type)
	out.Status = v1.ConditionStatus(in.Status)
	out.Reason = in.Reason
	out.Message = in.Message
	out.ObservedGeneration = in.ObservedGeneration
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	return nil
}

// Convert_certificates_WorkloadCertificateCondition_To_v1alpha1_WorkloadCertificateCondition is an autogenerated conversion function.
func Convert_certificates_WorkloadCertificateCondition_To_v1alpha1_WorkloadCertificateCondition(in *certificates.WorkloadCertificateCondition, out *v1alpha1.WorkloadCertificateCondition, s conversion.Scope) error {
	return autoConvert_certificates_WorkloadCertificateCondition_To_v1alpha1_WorkloadCertificateCondition(in, out, s)
}

func autoConvert_v1alpha1_WorkloadCertificateList_To_certificates_WorkloadCertificateList(in *v1alpha1.WorkloadCertificateList, out *certificates.WorkloadCertificateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]certificates.WorkloadCertificate)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_WorkloadCertificateList_To_certificates_WorkloadCertificateList is an autogenerated conversion function.
func Convert_v1alpha1_WorkloadCertificateList_To_certificates_WorkloadCertificateList(in *v1alpha1.WorkloadCertificateList, out *certificates.WorkloadCertificateList, s conversion.Scope) error {
	return autoConvert_v1alpha1_WorkloadCertificateList_To_certificates_WorkloadCertificateList(in, out, s)
}

func autoConvert_certificates_WorkloadCertificateList_To_v1alpha1_WorkloadCertificateList(in *certificates.WorkloadCertificateList, out *v1alpha1.WorkloadCertificateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.WorkloadCertificate)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_certificates_WorkloadCertificateList_To_v1alpha1_WorkloadCertificateList is an autogenerated conversion function.
func Convert_certificates_WorkloadCertificateList_To_v1alpha1_WorkloadCertificateList(in *certificates.WorkloadCertificateList, out *v1alpha1.WorkloadCertificateList, s conversion.Scope) error {
	return autoConvert_certificates_WorkloadCertificateList_To_v1alpha1_WorkloadCertificateList(in, out, s)
}

func autoConvert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec(in *v1alpha1.WorkloadCertificateSpec, out *certificates.WorkloadCertificateSpec, s conversion.Scope) error {
	out.SignerName = in.SignerName
	out.ServiceAccount = in.ServiceAccount
	out.Pod = in.Pod
	out.PodUID = in.PodUID
	out.Node = in.Node
	out.Requester = in.Requester
	out.PublicKey = in.PublicKey
	return nil
}

// Convert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec is an autogenerated conversion function.
func Convert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec(in *v1alpha1.WorkloadCertificateSpec, out *certificates.WorkloadCertificateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_WorkloadCertificateSpec_To_certificates_WorkloadCertificateSpec(in, out, s)
}

func autoConvert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec(in *certificates.WorkloadCertificateSpec, out *v1alpha1.WorkloadCertificateSpec, s conversion.Scope) error {
	out.SignerName = in.SignerName
	out.ServiceAccount = in.ServiceAccount
	out.Pod = in.Pod
	out.PodUID = in.PodUID
	out.Node = in.Node
	out.Requester = in.Requester
	out.PublicKey = in.PublicKey
	return nil
}

// Convert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec is an autogenerated conversion function.
func Convert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec(in *certificates.WorkloadCertificateSpec, out *v1alpha1.WorkloadCertificateSpec, s conversion.Scope) error {
	return autoConvert_certificates_WorkloadCertificateSpec_To_v1alpha1_WorkloadCertificateSpec(in, out, s)
}

func autoConvert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus(in *v1alpha1.WorkloadCertificateStatus, out *certificates.WorkloadCertificateStatus, s conversion.Scope) error {
	out.Conditions = *(*[]certificates.WorkloadCertificateCondition)(unsafe.Pointer(&in.Conditions))
	out.Certificate = in.Certificate
	out.CertificateObservedGeneration = in.CertificateObservedGeneration
	out.NotBefore = in.NotBefore
	out.NotAfter = in.NotAfter
	out.BeginRefreshAt = in.BeginRefreshAt
	return nil
}

// Convert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus is an autogenerated conversion function.
func Convert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus(in *v1alpha1.WorkloadCertificateStatus, out *certificates.WorkloadCertificateStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_WorkloadCertificateStatus_To_certificates_WorkloadCertificateStatus(in, out, s)
}

func autoConvert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus(in *certificates.WorkloadCertificateStatus, out *v1alpha1.WorkloadCertificateStatus, s conversion.Scope) error {
	out.Conditions = *(*[]v1alpha1.WorkloadCertificateCondition)(unsafe.Pointer(&in.Conditions))
	out.Certificate = in.Certificate
	out.CertificateObservedGeneration = in.CertificateObservedGeneration
	out.NotBefore = in.NotBefore
	out.NotAfter = in.NotAfter
	out.BeginRefreshAt = in.BeginRefreshAt
	return nil
}

// Convert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus is an autogenerated conversion function.
func Convert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus(in *certificates.WorkloadCertificateStatus, out *v1alpha1.WorkloadCertificateStatus, s conversion.Scope) error {
	return autoConvert_certificates_WorkloadCertificateStatus_To_v1alpha1_WorkloadCertificateStatus(in, out, s)
}
